// console.log(JSON.parse(localStorage.getItem("dealsData")) || "dealsData: " + []);
// console.log("Favorites: " + localStorage.getItem("favorites") || "Favorites: " +  []);

// Use constructor class to generate the HTML for each object in the data array. Array was generated by processing API response.
class GalleryItem {
  // Define properties for each instance.
  constructor(objectInArray) {
      this.gameID = objectInArray.info.gameID;
      this.steamAppID = objectInArray.info.steamAppID;
      this.thumb = objectInArray.info.thumb;
      this.title = objectInArray.info.title;
      this.dealID = objectInArray.deals[0].dealID;
      this.price = objectInArray.deals[0].price;
      this.retailPrice = objectInArray.deals[0].retailPrice;
      this.savings = Math.round(parseFloat(objectInArray.deals[0].savings));
  }

    // Define generateHtml method for each instance. Allows for HTML generation using the properties created by the constructor.
    generateHtml() {
        return `
            <div class="gallery-item" data-steamid="${this.steamAppID}" data-gameid="${this.gameID}">
                <div class="image-container">
                    <img src="${this.thumb}" alt="${this.title}" onerror="missingImage(this)">
                    <div class="overlay">
                        <div class="overlay-content">
                            <p>${this.title}</p>
                            <a href="https://www.metacritic.com${this.metacriticLink}">Metacritic: ${this.metacriticScore}</a>
                            <p>Steam rating: ${this.steamRatingPercent}</p>
                            <p>Deal rating: ${this.dealRating}</p>
                            <a href="https://www.cheapshark.com/redirect?dealID=${this.dealID}">See the deal!</a>
                        </div>
                    </div>
                </div>
                <div class="item-footer">
                    <div class="game-details">
                        <div class="savings">-${this.savings}%</div>
                        <div class="prices">
                            <div class="salePrice">$${this.price}</div>
                            <div class="normalPrice">$${this.retailPrice}</div>
                        </div>
                    </div>
                    <div class="heart red-heart">
                        &#9829;
                    </div>
                </div>
            </div>
        `;
    }
}

// Request options necessary to make API call.
let requestOptions = {
  method: 'GET',
  redirect: 'follow'
};

// Check if storedFavorites exists and is not null. Initialize favorites array to allow steam ID retrieval and storage. 
let storedFavorites = localStorage.getItem('favorites');
let favorites = storedFavorites && storedFavorites !== "null" ? JSON.parse(storedFavorites) : [];
// Check if storedFavorites exists and is not null. Initialize favorites array to allow steam ID retrieval and storage. 
let storedGameIds = localStorage.getItem('gameids');
let gameIds = storedGameIds && storedGameIds !== "null" ? JSON.parse(storedGameIds) : [];

// Make API call. For each object in data, append the HTML generated by each instance of GalleryItem after sanitizing.
fetch("https://www.cheapshark.com/api/1.0/games?ids=" + gameIds, requestOptions)
  .then(response => response.json())
  .then(data => {
    // console.log(data);
  
    let wishlistGameArr = [];
    let wishlistIndex = -1;

    // Turning the data object into an array.
    for (let i = 0; i < Object.keys(data).length; i++) {
      let wishlistGameObj = {};
      wishlistIndex = gameIds[i];
      Object.assign(wishlistGameObj, data[wishlistIndex]);
      wishlistGameObj.info.gameID = wishlistIndex;
      wishlistGameArr.push(wishlistGameObj);
    }
    // console.log(wishlistGameArr);

    wishlistGameArr.forEach(objectInArray => {
    //   objectInArray.gameID = wishlistIndex;  ////////////////////

      let galleryItem = new GalleryItem(objectInArray);
    //   console.log(galleryItem);
      let galleryItemHtml = galleryItem.generateHtml();
      // console.log(galleryItemHtml);
      let galleryItemHtmlClean = DOMPurify.sanitize(galleryItemHtml);
    //   console.log(galleryItemHtmlClean);
      $('.gallery').append(galleryItemHtmlClean);
    });

    // Event delegation for dynamic content.
    // Overlay and links (Need to keep referer to comply with cheapshark API). Due to sanitizing, HTML attributes are added until this stage.
    $('.gallery').on('click', '.image-container', function() {
        $(this).find('.overlay').show();
        $(this).find('.overlay a').attr({
            'target': '_blank',
            'rel': 'noopener'
        });
    });
    $('.gallery').on('click', '.overlay', function(event) {
        event.stopPropagation();
        $(this).hide();
    });

    // Adding and removing favorites as well as updating game id for wishlist.
    $('.gallery').on('click', '.heart', function(event) {
        event.stopPropagation();
        $(this).toggleClass('red-heart');

        let steamID = $(this).closest('.gallery-item').data('steamid');
        let index = favorites.indexOf(steamID);
        if (index === -1) {
            favorites.push(steamID);
        } else {
            favorites.splice(index, 1);
        }
        localStorage.setItem('favorites', JSON.stringify(favorites));

        // Game ID's
        let gameID = $(this).closest('.gallery-item').data('gameid');
        let indexGameId = gameIds.indexOf(gameID);
        if (indexGameId === -1) {
            gameIds.push(gameID);
        } else {
            gameIds.splice(index, 1);
        }
        localStorage.setItem('gameids', JSON.stringify(gameIds));
    });
})
.catch(error => {
    console.log('error', error);
});

// Check for broken links (HTML image elements) and display favorite games as "hearted".
$(window).on('load', function() {
  $('img').each(function() {
      if (!this.complete || typeof this.naturalWidth == "undefined" || this.naturalWidth == 0) {
          this.src = './assets/images/missing.png';
      }
  });

/*   let favorites = JSON.parse(localStorage.getItem('favorites')) || [];
  $('.gallery-item').each(function() {
    $(this).find('.heart').addClass('red-heart');

      let steamID = $(this).data('steamid');
      if (favorites.includes(steamID)) {
          $(this).find('.heart').addClass('red-heart');
      }
  }); */
});